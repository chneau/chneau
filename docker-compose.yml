version: '3.7'
services:

  drone-server:
    image: drone/drone:0.8.6
    volumes:
      - /containers/drone:/var/lib/drone
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      labels:
        traefik.enable: "true"
        traefik.frontend.rule: "Host:drone.${DOMAIN:?}"
        traefik.docker.network: "chneau_web"
        traefik.port: "8000"
      placement:
        constraints:
          - node.role == manager
    environment:
      DRONE_OPEN: "false"
      DRONE_HOST: "https://drone.${DOMAIN:?}"
      DRONE_ADMIN: "chneau"
      DRONE_GITHUB: "true"
      DRONE_GITHUB_CLIENT: "${DRONE_GITHUB_CLIENT:?}"
      DRONE_GITHUB_SECRET: "${DRONE_GITHUB_SECRET:?}"
      DRONE_SECRET: "${DRONE_SECRET:?}"
    networks:
      - web


  drone-agent:
    image: drone/agent:0.8.6
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      labels:
        traefik.enable: "false"
    environment:
      DRONE_SERVER: "drone-server:9000"
      DRONE_SECRET: "${DRONE_SECRET:?}"
    networks:
      - web

  draw:
    image: chneau/draw:latest
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      labels:
        traefik.enable: "true"
        traefik.frontend.rule: "Host:draw.${DOMAIN:?}"
        traefik.docker.network: "chneau_web"
        traefik.port: "3000"
    environment:
      PORT: "3000"
    networks:
      - web

  registry:
    image: registry
    volumes:
      - /containers/registry:/var/lib/registry
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      labels:
        traefik.enable: "true"
        traefik.frontend.rule: "Host:registry.${DOMAIN:?}"
        traefik.docker.network: "chneau_web"
        traefik.port: "5000"
        traefik.frontend.auth.basic.users: "${USER_PASSWD:?}"
      placement:
        constraints:
          - node.role == manager
    environment:
      REGISTRY_STORAGE_DELETE_ENABLED: "true"
    networks:
      - web

  netdata:
    image: titpetric/netdata
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      labels:
        traefik.enable: "true"
        traefik.frontend.rule: "Host:netdata.${DOMAIN:?}"
        traefik.docker.network: "chneau_web"
        traefik.port: "19999"
        traefik.frontend.auth.basic.users: "${USER_PASSWD:?}"
    networks:
      - web

  chneau:
    image: chneau/chneau
    networks:
      - web
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: any
      update_config:
        order: start-first
        delay: 0s
        parallelism: 2
      labels:
        traefik.enable: "true"
        traefik.frontend.rule: "Host:${DOMAIN:?}"
        traefik.docker.network: "chneau_web"
        traefik.port: "8000"
    environment:
      PORT: ${PORT:-8000}
networks:
  web:
